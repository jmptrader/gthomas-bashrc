# ~/.profile: executed by the command interpreter for login shells.
# This file is NOT read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

# set PATH so it includes user's private bin if it exists
#export LANGUAGE="hu_HU:en_US:en"
export LANGUAGE="en"
export LANG="hu_HU.UTF-8"
export LC_ALL=
export ENV=$HOME/.profile

export EDITOR=vi
export VISUAL=vi
export PAGER='less'
export CHROMIUM_USER_FLAGS="--memory-model=low --purge-memory-button --enable-internal-flash"

if [ -z "$_CACHE" ]; then
    C=$(readlink .cache)
    if [ -n "$C" ]; then
        mkdir -p $C
    fi

    makelink () {
        DN=$1
        if [ -L $DN -a -d $(readlink ~/$DN) ]; then
            return
        fi
        if readlink ~/$DN >/dev/null; then
            dd=$(readlink ~/$DN)
            if [ ! -d $dd ]; then
                mkdir -p $dd
            fi
        else
            D=/tmp/${USER}
            if [ -d $D/$DN ]; then
                echo "Deleting ~/$DN"
                rm -ri ~/$DN && ln -fs $D/$DN ~/$DN
            else
                echo "Deleting $D/$DN"
                rm -ri $D/$DN
                echo "Moving ~/$DN to $D/$DN"
                mkdir -p $D && mv ~/$DN $D/ && ln -fs $D/$DN ~/$DN
            fi
        fi
    }

    makelink .cache
    makelink Downloads
    export _CACHE=1
fi

#[ -e ~/.profabevjava ] && . ~/.profabevjava

ga() {
    gpg_agent_info=/tmp/$USER/.gpg-agent-info-$(hostname)
    if [ -d /tmp/$USER ]; then
        if [ -f $gpg_agent_info ]; then
            . $gpg_agent_info
            if readlink /proc/$SSH_AGENT_PID/exe >/dev/null; then
                echo "$gpg_agent_info ok"
                . "$gpg_agent_info"
                export GPG_AGENT_INFO
                export SSH_AUTH_SOCK
                export SSH_AGENT_PID
            else
                echo "stale $gpg_agent_info"
                rm $gpg_agent_info
            fi
        fi
    else
        mkdir -p /tmp/$USER
    fi
    if [ ! -f $gpg_agent_info ]; then
        echo "starting new gpg-agent"
        eval $(gpg-agent --daemon --enable-ssh-support \
            --write-env-file "$gpg_agent_info")
    fi

    if ! ssh-add -l | grep -q tgulacsi@unosoft; then
        ssh-add ~/.ssh/id_rsa
        ssh-add tgulacsi@unosoft
    fi
}

#echo _SSH_AGENT=$_SSH_AGENT
if [ -z "$_SSH_AGENT" ]; then
    ga
    export _SSH_AGENT=$$
fi


if ! systemd-notify --booted; then  # not using systemd
  start() {
    sudo rc.d start $1
  }

  restart() {
    sudo rc.d restart $1
  }

  stop() {
    sudo rc.d stop $1
  }
else
  start() {
    sudo systemctl start $1.service
  }

  restart() {
    sudo systemctl restart $1.service
  }

  stop() {
    sudo systemctl stop $1.service
  }

  enable() {
    sudo systemctl enable $1.service
  }

  status() {
    sudo systemctl status $1.service
  }

  disable() {
    sudo systemctl disable $1.service
  }
fi

#[ -x ~/bin/uno-ssh ] && . ~/bin/uno-ssh

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] && echo "$PATH" | grep -vq $HOME/bin; then
    export PATH="$HOME/bin:$PATH"
fi

if [ -z "$GOPATH" ]; then
    GOPATH=$HOME
    if [ -d "$GOPATH" ]; then
        export GOPATH
        if [ -x /usr/local/go/bin/go ]; then
            export GOROOT=/usr/local/go
            PATH=$GOROOT/bin:$PATH
        fi
        if [ $GOPATH != $HOME ]; then
            export PATH=$PATH:$GOPATH/bin
        fi
        export PATH
    fi
fi

if [ -z "_OHOME_HAS_BEEN_SET" ]; then
#echo OH=$ORACLE_HOME
if [ -z "$ORACLE_HOME" ]; then
    for bdn in /u01/app/oracle/product /usr/lib/oracle; do
        #echo "bdn=$bdn"
        if [ ! -d $bdn ]; then
            continue
        fi
        find "$bdn" -maxdepth 2 -type d \( -name xe -o -name client64 \) \
                2>/dev/null | head -n1 | while read dn; do
            #echo "#dn=$dn"
            export ORACLE_BASE=$bdn
            export ORACLE_HOME=$dn
            #export ORACLE_SID=XE
            export PATH=$ORACLE_HOME/bin:$PATH
            #echo "H=$ORACLE_HOME"
            break
        done
        break
    done
fi
#echo OH=$ORACLE_HOME
    _OHOME_HAS_BEEN_SET=1
fi

export CDPATH=.:~:$GOPATH/src/github.com/tgulacsi

if [ -z "$SUDO_ASKPASS" ]; then
    export SUDO_ASKPASS=/usr/bin/ssh-askpass
fi
if [ -z "$_NORC"]; then
    case "$-" in
        *i*) . $HOME/.bashrc
    esac
fi
